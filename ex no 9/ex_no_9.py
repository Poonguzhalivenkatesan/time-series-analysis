# -*- coding: utf-8 -*-
"""ex no 9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10t057h7fORYS0H0FWp-6HrJVG7zfC4bn
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

# Load dataset
df = pd.read_csv('/content/supermarket_sales - Sheet1.csv')
df['Date'] = pd.to_datetime(df['Date'])
df.sort_values('Date', inplace=True)

# Aggregate sales per day
daily_sales = df.groupby('Date')['Total'].sum().reset_index()

# Resample to ensure daily frequency
daily_sales = daily_sales.set_index('Date').resample('D').sum().fillna(0)

# Normalize
scaler = MinMaxScaler()
scaled = scaler.fit_transform(daily_sales)

# Create sequences
def create_dataset(data, time_steps=7):
    X, y = [], []
    for i in range(len(data) - time_steps):
        X.append(data[i:i + time_steps])
        y.append(data[i + time_steps])
    return np.array(X), np.array(y)

time_steps = 7
X, y = create_dataset(scaled, time_steps)
X = X.reshape((X.shape[0], X.shape[1], 1))

# Split train-test
split = int(0.8 * len(X))
X_train, X_test = X[:split], X[split:]
y_train, y_test = y[:split], y[split:]

# Build LSTM model
model = Sequential([
    LSTM(64, activation='relu', input_shape=(time_steps, 1)),
    Dense(1)
])
model.compile(optimizer='adam', loss='mse')
model.fit(X_train, y_train, epochs=30, validation_data=(X_test, y_test), verbose=1)

# Predict
y_pred = model.predict(X_test)
y_pred_inv = scaler.inverse_transform(y_pred)
y_test_inv = scaler.inverse_transform(y_test)

# Plot
plt.figure(figsize=(10, 5))
plt.plot(y_test_inv, label="Actual")
plt.plot(y_pred_inv, label="Predicted")
plt.title("Supermarket Daily Sales Forecast")
plt.xlabel("Time")
plt.ylabel("Sales")
plt.legend()
plt.grid()
plt.show()